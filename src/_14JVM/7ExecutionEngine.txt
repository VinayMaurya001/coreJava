Execution Engine
This is the central component of JVM.
Execution engine is responsible to execute, Java class files.
Execution engine, mainly contains, two components:
⦁	Interpreter
⦁	JIT compiler

Interpreter
It is responsible to 
⦁	read byteCode and 
⦁	interpret into machine code (native code) and 
⦁	execute that machine code line by line.
The problem with interpreter is, it interpret every time even same method invoked multiple times, which reduces performance of the system.
To overcome this problem Sun people introduce JIT compiler in 1.1 version.

JIT compiler
The main purpose of GIT compiler is to improve performance. 
Internally JIT compiler maintain a separate count for every method. Whenever JVM come across any method call, 
	1st that method will be interpreted normally by the interpreter and JIT compiler increments the corresponding variable.
This process will be continue for every method.  Once if any method cound reaches threshold value then JIT compiler identifies that 
	the method is a repeatadely used method (HotSpot). 
	Immediately JIT compiler compiles that method and generate its corresponding native code. 
Next time JVM come across that method call then JVM uses native code directly and executes it instead  of interpreting once again.
	So that performance of the system will be improved. The threshold cound vary from JVM to JVM.  

Some advance JIT compiler will recompile generated native code, if count reaches second time. 
SO that more optimized machine code will be generated. Internally profiler, which is the part of JIT compiler, 
	is responsible to identify hotspots.

	
Note:
JVM interprets total program at least once.
JIT compilation is applicable only for repeatedly required methods not for every method.

	Interpreter
	|
	JIT compiler(Execution engine)
	 Intermediate code generator
		|I.C
		code optimizer
		|
		Target code generator
		|
		m/c code
	|
	GC
	...


Java Native Interface(JNI)
JNI acts as mediator for Java method calls and corresponding native library. 
That is JNI is responsible to provide information about native libraries to the JVM
Native method library provides or holds native libraries information.

Execution Engine <-- --> Java native interface(JNI) <-- Native method library

