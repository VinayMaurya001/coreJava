Aggregate Functions 
Oracle Database defines several Aggregate Functions to get Summary Results like the Number of Records, 
	Maximum Value of a particular Column etc 
	count(*)  ->  Returns The Number of Records max(esal) ->  Returns Maximum Salary min(esal) ->  Returns Minimum Salary 
Eg: 
	String sqlQuery="select count(*) from employees"; 
	ResultSet rs =st.executeQuery(sqlQuery); 
	if(rs.next()) {   
		System.out.println(rs.getInt(1)); 
	} 
Note: If Number of Records is more, then we should use while Loop. 

If Number of Records is only one then we should use if Statement.  
Application-15: To Display Number of Rows by SQL Aggregate Function count(*) 
Note: SQL Aggregate Function: count(*) Returns Number of Rows Present in the Table 
Example: RowCount.java	

Application-16: How to Select highest salaried Employee Information by using SQL Aggregate Function Max 
Example: HighestSalaryEmp.java

Note: To find Minimum salaried Employee Information 
	String sqlQuery="select  * from employees where esal in (select min(esal) from employees)"; 
Application-17: How to Select Nth Highest Salaried Employee Information 
Example: NthHighestSalaryEmp.java

Note: The Rank Function will assign a ranking to each Row starting from 1. 
	select eno,ename,esal,eaddr, rank() over (order by esal DESC) 
	700 Sree Mukhi    7000 Hyd -> 1 
	600 Anasooya      6000 Hyd -> 2 
	500 Reshmi        5000 Hyd -> 3 
	400 Veena         4000 Chennai -> 4 
	300 Mallika       3500 Chennai -> 5 
	200 Sunny         2000 Mumbai -> 6 
	100 Durga         1000 Hyd -> 7 
 
Application-18: How to Display retrieved Data from the Database through HTML 
Example: SelectAllRowsToHtml.html

Application-19: How to execute Select and Non-Select Queries by using execute() Method 
Example: SelectNonSelect.java


Application-20: Execute Methods LoopHoles-1: executeQuery() Vs Non-select 
If we pass Non-Select Query as Argument to executeQuery() Method then Result is varied from Driver to Driver. 
In the case of Type-1 Driver we will get SQLException : No ResultSet was produced. 
In the case of Type-4 Driver provided by Oracle then we won't get any Exception and Empty ResultSet Object will be created. 
If we are trying to access that ResultSet then we will get SQLException 
 
For Type-1:
	Example: ExecuteMethodLoopHoles.java
For Type-4 Driver: 
	Example: ExecuteMethodLoopHoles.java

Application-21: Execute Methods LoopHoles-2: executeUpdate() Vs Select 
If we send Select Query as Argument to executeUpdate() Method then Result is varied from Driver to Driver. 
In the case of Type-1 Driver we will get SQLException: No Row Count was produced. 
In the case of Type-4 Driver provided by Oracle then we won't get any Exception and 
	Returns the Number of Records retrieved from the Database.
	
For Type-1: 
	Example: ExecuteMethodLoopHoles2.java
For Type-4 Driver: 
	Example: ExecuteMethodLoopHoles2.java
	
Application-20: Execute Methods LoopHoles-3:executeUpdate() Vs DDL 
If we use executeUpdate() Method for DDL Queries like Create Table, Drop Table Etc. 
Then Record Manipulation is not available on Database. 
In this Case Return Value we cannot expect and it is varied from Driver to Driver. 
For Type-1 Driver we will get 1 and for Oracle Type-4 Driver we will get 0. 

For Type-1 Driver: 
	Example: ExecuteMethodLoopHoles3.java
For Type-4 Driver: 
	Example: ExecuteMethodLoopHoles3.java




